<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<atom:link href="https://xarkes.com/b/rss.xml" rel="self" type="application/rss+xml"/>
<title>xarkes' blog</title>
<link>https://xarkes.com/b/</link>
<description></description>
<language>en-us</language>
<lastBuildDate>Sun, 23 May 2021 16:10:33 +0200</lastBuildDate>
<item>
<title>DEFCON quals 2021 - Exploit for dummies</title>
<link>https://xarkes.com/b/defcon-quals-2021-exploit-for-dummies.html</link>
<description><![CDATA[
Around 10 days ago was <a href="https://oooverflow.io/dc-ctf-2021-quals/">DEFCON qualifiers</a> and I had a chance to take a look at the challenges.
My eyes stopped on "Exploit for dummies" as I recognised myself in the term "dummy" and hoped I could solve this one.
The challenge was marked as "shellcoding" and believe it or not it will deal with <a href="https://en.wikipedia.org/wiki/DWARF">DWARF</a> debugging data format.
<a href="https://xarkes.com/b/defcon-quals-2021-exploit-for-dummies.html">Read more at https://xarkes.com/b/defcon-quals-2021-exploit-for-dummies.html</a>
]]></description>
<dc:creator>xarkes</dc:creator>
<guid isPermaLink="false">tag:xarkes.com,/b/defcon-quals-2021-exploit-for-dummies.html</guid>
<pubDate>Mon, 10 May 2021 20:12:50 +0200</pubDate>
</item>
<item>
<title>FCSC 2021 - The Offenders writeup</title>
<link>https://xarkes.com/b/fcsc-2021-the-offenders.html</link>
<description><![CDATA[
In the context of the <a href="https://ecsc.eu/">European Cyber Security Challenge</a> the <a href="https://en.wikipedia.org/wiki/Agence_nationale_de_la_s%C3%A9curit%C3%A9_des_syst%C3%A8mes_d%27information">ANSSI</a> organised qualifications named <a href="https://france-cybersecurity-challenge.fr/">FCSC</a> in order to select the team that would represent France.
I managed to take a look at some challenges, in particular "The Offenders" which deals about Windows Defender.
This writeup will show my quick and dirty way of solving it.
<a href="https://xarkes.com/b/fcsc-2021-the-offenders.html">Read more at https://xarkes.com/b/fcsc-2021-the-offenders.html</a>
]]></description>
<dc:creator>xarkes</dc:creator>
<guid isPermaLink="false">tag:xarkes.com,/b/fcsc-2021-the-offenders.html</guid>
<pubDate>Mon, 03 May 2021 18:02:23 +0200</pubDate>
</item>
<item>
<title>Making a Lineage 2 Bot</title>
<link>https://xarkes.com/b/making-a-lineage-2-bot.html</link>
<description><![CDATA[
A few months ago I got nostalgic and wanted to try again a little bit of Lineage 2.
In the past most servers were filled with tons of bots that would farm
in order to either level up, gain money or loot materials useful for crafting equipment.
The working and available bots are all non-free (to my knowledge) and most of them are detected by the remote servers as cheating tools!
So I decided to make my own bot as I thought the process would be interesting.
This blog post presents my approach at making my own bot for Lineage II.
<a href="https://xarkes.com/b/making-a-lineage-2-bot.html">Read more at https://xarkes.com/b/making-a-lineage-2-bot.html</a>
]]></description>
<dc:creator>xarkes</dc:creator>
<guid isPermaLink="false">tag:xarkes.com,/b/making-a-lineage-2-bot.html</guid>
<pubDate>Wed, 30 Dec 2020 00:00:00 +0100</pubDate>
</item>
<item>
<title>SSTIC 2020 - Challenge writeup (French)</title>
<link>https://xarkes.com/b/sstic-2020-challenge.html</link>
<description><![CDATA[
During the month of April I tried to solve the SSTIC challenge.
I managed to complete it eventually, and you can find my solution in french <a href="https://static.sstic.org/challenge2020/solutions/10_Antide_Petit.pdf.zip">here</a> (password: sstic2020).
<a href="https://xarkes.com/b/sstic-2020-challenge.html">Read more at https://xarkes.com/b/sstic-2020-challenge.html</a>
]]></description>
<dc:creator>xarkes</dc:creator>
<guid isPermaLink="false">tag:xarkes.com,/b/sstic-2020-challenge.html</guid>
<pubDate>Fri, 12 Jun 2020 00:00:00 +0200</pubDate>
</item>
<item>
<title>Advent 2019 - Genetic Mutation writeup (First Blood)</title>
<link>https://xarkes.com/b/advent-2019-Genetic-Mutation-First-Blood.html</link>
<description><![CDATA[
This month, I took a glance at <a href="https://overthewire.org">Over The Wire</a>
<a href="https://advent2019.overthewire.org">advent CTF</a>
with some of my teammates of <a href="https://securimag.org">Securimag</a>.
The challenge was asking for at most 4 bytes to patch and I found it sufficient
to exploit not the binary itself but rather the <code>exec</code> function. I don't know
if that was the intended way, but it was quick enough to pop a shell and get the
first blood.
<a href="https://xarkes.com/b/advent-2019-Genetic-Mutation-First-Blood.html">Read more at https://xarkes.com/b/advent-2019-Genetic-Mutation-First-Blood.html</a>
]]></description>
<dc:creator>xarkes</dc:creator>
<guid isPermaLink="false">tag:xarkes.com,/b/advent-2019-Genetic-Mutation-First-Blood.html</guid>
<pubDate>Thu, 26 Dec 2019 00:00:00 +0100</pubDate>
</item>
<item>
<title>Hack.lu 2019 - Baby Kernel 2 writeup</title>
<link>https://xarkes.com/b/hacklu-2019-babykernel-wu.html</link>
<description><![CDATA[
Last october, I participated to <a href="https://2019.hack.lu/">Hack.lu</a> Capture The Flag with my team
<a href="https://securimag.org/">Securimag</a>.
I did this writeup as all the ones I've read do not explain how they managed to reliably find the offset of <code>real_cred</code> in the <code>current_task</code> structure.
<a href="https://xarkes.com/b/hacklu-2019-babykernel-wu.html">Read more at https://xarkes.com/b/hacklu-2019-babykernel-wu.html</a>
]]></description>
<dc:creator>xarkes</dc:creator>
<guid isPermaLink="false">tag:xarkes.com,/b/hacklu-2019-babykernel-wu.html</guid>
<pubDate>Mon, 09 Dec 2019 00:00:00 +0100</pubDate>
</item>
</channel>
</rss>
